{"ast":null,"code":"var _jsxFileName = \"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/FormClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport \"../Modal.css\";\nimport APIService from \"../../APIService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormClient(props) {\n  _s();\n\n  const [ClientName, setClientName] = useState(\"\");\n  const [ClientEmail, setClientEmail] = useState(\"\");\n  const [ClientPhone, setClientPhone] = useState(\"\");\n  const [token] = useCookies([\"loginToken\"]);\n  useEffect(() => {\n    setClientName(props.ClientInstance.name);\n    setClientEmail(props.ClientInstance.email);\n    setClientPhone(props.ClientInstance.phone);\n  }, [props.ClientInstance]);\n\n  const updateClient = () => {\n    APIService.UpdateClient(props.ClientInstance.id, {\n      name: ClientName,\n      email: ClientEmail,\n      phone: ClientPhone\n    }, token[\"loginToken\"]).then(response => props.updatedClient(response)).then(props.setClientInstance(null));\n  };\n\n  const createClient = () => {\n    APIService.CreateClient({\n      name: ClientName,\n      email: ClientEmail,\n      phone: ClientPhone\n    }, token[\"loginToken\"]).then(response => props.createdClient(response)).then(props.setClientInstance(null));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: props.ClientInstance ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 modal-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.setClientInstance(null),\n        className: \"btn btn-primary close-btn\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"modal-title text-white\",\n          children: \"Client Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label text-light\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"Enter client's name...\",\n        value: ClientName,\n        onChange: e => setClientName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"form-label text-light\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Enter client's email...\",\n        value: ClientEmail,\n        onChange: e => setClientEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        className: \"form-label text-light\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"phone\",\n        placeholder: \"Enter client's phone...\",\n        value: ClientPhone,\n        onChange: e => setClientPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), props.ClientInstance.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateClient,\n        className: \"btn btn-primary\",\n        children: \"Update Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createClient,\n        className: \"btn btn-primary\",\n        children: \"Create Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormClient, \"dmrpwYpNJnYbA9K1QC83TEz5l1M=\", false, function () {\n  return [useCookies];\n});\n\n_c = FormClient;\nexport default FormClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormClient\");","map":{"version":3,"sources":["/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/FormClient.js"],"names":["React","useState","useEffect","useCookies","APIService","FormClient","props","ClientName","setClientName","ClientEmail","setClientEmail","ClientPhone","setClientPhone","token","ClientInstance","name","email","phone","updateClient","UpdateClient","id","then","response","updatedClient","setClientInstance","createClient","CreateClient","createdClient","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"../Modal.css\";\n\nimport APIService from \"../../APIService\";\n\nfunction FormClient(props) {\n  const [ClientName, setClientName] = useState(\"\");\n  const [ClientEmail, setClientEmail] = useState(\"\");\n  const [ClientPhone, setClientPhone] = useState(\"\");\n\n  const [token] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    setClientName(props.ClientInstance.name);\n    setClientEmail(props.ClientInstance.email);\n    setClientPhone(props.ClientInstance.phone);\n  }, [props.ClientInstance]);\n\n  const updateClient = () => {\n    APIService.UpdateClient(\n      props.ClientInstance.id,\n      {\n        name: ClientName,\n        email: ClientEmail,\n        phone: ClientPhone,\n      },\n      token[\"loginToken\"]\n    )\n      .then((response) => props.updatedClient(response))\n      .then(props.setClientInstance(null));\n  };\n\n  const createClient = () => {\n    APIService.CreateClient(\n      {\n        name: ClientName,\n        email: ClientEmail,\n        phone: ClientPhone,\n      },\n      token[\"loginToken\"]\n    )\n      .then((response) => props.createdClient(response))\n      .then(props.setClientInstance(null));\n  };\n\n  return (\n    <div className=\"overlay\">\n      {props.ClientInstance ? (\n        <div className=\"mb-3 modal-card\">\n          <button\n            onClick={() => props.setClientInstance(null)}\n            className=\"btn btn-primary close-btn\"\n          >\n            x\n          </button>\n          <div className=\"modal-header\">\n            <h4 className=\"modal-title text-white\">Client Form</h4>\n          </div>\n          <br />\n          <label htmlFor=\"name\" className=\"form-label text-light\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            placeholder=\"Enter client's name...\"\n            value={ClientName}\n            onChange={(e) => setClientName(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"email\" className=\"form-label text-light\">\n            Email\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"email\"\n            placeholder=\"Enter client's email...\"\n            value={ClientEmail}\n            onChange={(e) => setClientEmail(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"phone\" className=\"form-label text-light\">\n            Phone\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phone\"\n            placeholder=\"Enter client's phone...\"\n            value={ClientPhone}\n            onChange={(e) => setClientPhone(e.target.value)}\n          />\n          <br />\n\n          {props.ClientInstance.id ? (\n            <button onClick={updateClient} className=\"btn btn-primary\">\n              Update Client\n            </button>\n          ) : (\n            <button onClick={createClient} className=\"btn btn-primary\">\n              Create Client\n            </button>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FormClient;\n"]},"metadata":{},"sourceType":"module"}