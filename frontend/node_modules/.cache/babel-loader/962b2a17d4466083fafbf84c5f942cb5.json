{"ast":null,"code":"var _jsxFileName = \"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/Client.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport \"./Client.css\";\nimport FormClient from \"./FormClient\";\nimport APIService from \"../../APIService\";\nimport DetailClient from \"./DetailClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Client = () => {\n  _s();\n\n  const [clients, setClients] = useState([]);\n  const [token, setToken] = useCookies([\"loginToken\"]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/client\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`\n      }\n    }).then(response => response.json()).then(response => setClients(response)).catch(error => console.log(error));\n  }, [token]);\n  const [ClientInstance, setClientInstance] = useState(null);\n  const [ActiveClient, setActiveClient] = useState(null);\n  const [ClientProjects, setClientProjects] = useState(null);\n\n  const detailBtn = client => {\n    setActiveClient(client);\n    fetch(`http://127.0.0.1:8000/api/project?client=${client.id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`\n      }\n    }).then(response => response.json()).then(response => setClientProjects(response));\n  };\n\n  const editClientBtn = client => {\n    setClientInstance(client);\n  };\n\n  const updatedClient = client => {\n    const new_client = clients.map(myclient => {\n      if (myclient.id === client.id) {\n        return client;\n      } else {\n        return myclient;\n      }\n    });\n    setClients(new_client);\n  };\n\n  const clientNewForm = () => {\n    setClientInstance({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n  };\n\n  const createdClient = client => {\n    const new_client = [...clients, client];\n    setClients(new_client);\n  };\n\n  const deleteClientBtn = client => {\n    APIService.DeleteClient(client.id).then(() => {\n      const new_client = clients.filter(myclient => {\n        if (myclient.id === client.id) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n      setClients(new_client);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      padding: \"5em 0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"burlywood\"\n          },\n          children: \"Your Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-sm\",\n          onClick: clientNewForm,\n          children: \"+ Add a new client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"bg-light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper d-flex flex-wrap flex-column flex-sm-row\",\n      children: clients.map(client => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-4 m-2 flex-grow-1 \",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-header bg-dark border-dark text-white pt-3\",\n            children: client.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body bg-dark text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", client.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone: \", client.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clients-btn-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => detailBtn(client),\n                className: \"btn btn-primary btn-sm\",\n                children: \"Detail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editClientBtn(client),\n                className: \"btn btn-primary btn-sm\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteClientBtn(client),\n                className: \"btn btn-delete btn-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, client.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), ClientInstance ? /*#__PURE__*/_jsxDEV(FormClient, {\n      ClientInstance: ClientInstance,\n      setClientInstance: setClientInstance,\n      updatedClient: updatedClient,\n      createdClient: createdClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this) : null, ClientProjects ? /*#__PURE__*/_jsxDEV(DetailClient, {\n      ActiveClient: ActiveClient,\n      ClientProjects: ClientProjects,\n      setClientProjects: setClientProjects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Client, \"9dsc848kZI3BOpQjgrje1UQKE5Y=\", false, function () {\n  return [useCookies];\n});\n\n_c = Client;\nexport default Client;\n\nvar _c;\n\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"sources":["/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/Client.js"],"names":["React","useState","useEffect","useCookies","FormClient","APIService","DetailClient","Client","clients","setClients","token","setToken","fetch","method","headers","Authorization","then","response","json","catch","error","console","log","ClientInstance","setClientInstance","ActiveClient","setActiveClient","ClientProjects","setClientProjects","detailBtn","client","id","editClientBtn","updatedClient","new_client","map","myclient","clientNewForm","name","email","phone","createdClient","deleteClientBtn","DeleteClient","filter","padding","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"./Client.css\";\n\nimport FormClient from \"./FormClient\";\nimport APIService from \"../../APIService\";\nimport DetailClient from \"./DetailClient\";\n\nconst Client = () => {\n  const [clients, setClients] = useState([]);\n  const [token, setToken] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/client\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setClients(response))\n      .catch((error) => console.log(error));\n  }, [token]);\n\n  const [ClientInstance, setClientInstance] = useState(null);\n\n  const [ActiveClient, setActiveClient] = useState(null);\n  const [ClientProjects, setClientProjects] = useState(null);\n\n  const detailBtn = (client) => {\n    setActiveClient(client);\n    fetch(`http://127.0.0.1:8000/api/project?client=${client.id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setClientProjects(response));\n  };\n\n  const editClientBtn = (client) => {\n    setClientInstance(client);\n  };\n\n  const updatedClient = (client) => {\n    const new_client = clients.map((myclient) => {\n      if (myclient.id === client.id) {\n        return client;\n      } else {\n        return myclient;\n      }\n    });\n\n    setClients(new_client);\n  };\n\n  const clientNewForm = () => {\n    setClientInstance({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n    });\n  };\n\n  const createdClient = (client) => {\n    const new_client = [...clients, client];\n    setClients(new_client);\n  };\n\n  const deleteClientBtn = (client) => {\n    APIService.DeleteClient(client.id)\n      .then(() => {\n        const new_client = clients.filter((myclient) => {\n          if (myclient.id === client.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        setClients(new_client);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"container\" style={{ padding: \"5em 0\" }}>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"project-header\">\n          <h1 style={{ color: \"burlywood\" }}>Your Clients</h1>\n        </div>\n        <div className=\"project-header\">\n          <button className=\"btn btn-primary btn-sm\" onClick={clientNewForm}>\n            &#43; Add a new client\n          </button>\n        </div>\n      </div>\n      <hr className=\"bg-light\" />\n      <div className=\"card-wrapper d-flex flex-wrap flex-column flex-sm-row\">\n        {clients.map((client) => {\n          return (\n            <div key={client.id} className=\"card col-md-4 m-2 flex-grow-1 \">\n              <h3 className=\"card-header bg-dark border-dark text-white pt-3\">\n                {client.name}\n              </h3>\n              <div className=\"card-body bg-dark text-white\">\n                <p>Email: {client.email}</p>\n                <p>Phone: {client.phone}</p>\n\n                <div className=\"clients-btn-wrapper\">\n                  <button\n                    onClick={() => detailBtn(client)}\n                    className=\"btn btn-primary btn-sm\"\n                  >\n                    Detail\n                  </button>\n                  <button\n                    onClick={() => editClientBtn(client)}\n                    className=\"btn btn-primary btn-sm\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => deleteClientBtn(client)}\n                    className=\"btn btn-delete btn-sm\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {ClientInstance ? (\n        <FormClient\n          ClientInstance={ClientInstance}\n          setClientInstance={setClientInstance}\n          updatedClient={updatedClient}\n          createdClient={createdClient}\n        />\n      ) : null}\n\n      {ClientProjects ? (\n        <DetailClient\n          ActiveClient={ActiveClient}\n          ClientProjects={ClientProjects}\n          setClientProjects={setClientProjects}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}