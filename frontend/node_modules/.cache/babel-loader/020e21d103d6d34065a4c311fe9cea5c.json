{"ast":null,"code":"var _jsxFileName = \"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport dateFormat from \"dateformat\";\nimport { useCookies } from \"react-cookie\";\nimport \"./Project.css\";\nimport FormProject from \"./FormProject\";\nimport DetailProject from \"./DetailProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Project = () => {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  const [token] = useCookies([\"loginToken\"]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/project\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`\n      }\n    }).then(response => response.json()).then(response => setProjects(response)).then(console.log(projects)).catch(error => console.log(error));\n  }, [token]);\n  const [ProjectInstance, setProjectInstance] = useState(null);\n\n  const editProjectBtn = project => {\n    setProjectInstance(project);\n  };\n\n  const updatedProjects = project => {\n    const new_project = projects.map(myproject => {\n      if (myproject.id === project.id) {\n        return project;\n      } else {\n        return myproject;\n      }\n    });\n    setProjects(new_project);\n  };\n\n  const projectNewForm = () => {\n    setProjectInstance({\n      name: \"\",\n      deadline: \"\",\n      description: \"\",\n      status: \"\",\n      client: \"\"\n    });\n  };\n\n  const createdProject = project => {\n    const new_project = [...projects, project];\n    setProjects(new_project);\n  };\n\n  const [ActiveProject, setActiveProject] = useState();\n  const [ProjectTodos, setProjectTodos] = useState();\n\n  const viewProjectDetail = project => {\n    setActiveProject(project);\n    fetch(`http://127.0.0.1:8000/api/todos?project=${project.id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`\n      }\n    }).then(response => response.json()).then(response => setProjectTodos(response));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"5em\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"burlywood\"\n          },\n          children: \"Your Exising Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-header-btn d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"custom-select\",\n            id: \"inputGroupSelect01\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              children: \"Filter...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-sm project-add-btn\",\n          onClick: projectNewForm,\n          children: \"+ Add a new project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"bg-light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proj-wrapper text-white\",\n      children: projects ? projects.map(project => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Deadline: \", dateFormat(project.deadline, \"mmmm dS, yyyy\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", project.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", project.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-btn-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => viewProjectDetail(project),\n              className: \"btn btn-primary btn-sm\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editProjectBtn(project),\n              className: \"btn btn-primary btn-sm mx-3\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), ProjectInstance ? /*#__PURE__*/_jsxDEV(FormProject, {\n      ProjectInstance: ProjectInstance,\n      setProjectInstance: setProjectInstance,\n      updatedProjects: updatedProjects,\n      createdProject: createdProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : null, ActiveProject ? /*#__PURE__*/_jsxDEV(DetailProject, {\n      ActiveProject: ActiveProject,\n      setActiveProject: setActiveProject,\n      ProjectTodos: ProjectTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Project, \"glK92XBTmTM6n60/bS9WmkQkZmc=\", false, function () {\n  return [useCookies];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/Project.js"],"names":["React","useState","useEffect","dateFormat","useCookies","FormProject","DetailProject","Project","projects","setProjects","token","fetch","method","headers","Authorization","then","response","json","console","log","catch","error","ProjectInstance","setProjectInstance","editProjectBtn","project","updatedProjects","new_project","map","myproject","id","projectNewForm","name","deadline","description","status","client","createdProject","ActiveProject","setActiveProject","ProjectTodos","setProjectTodos","viewProjectDetail","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport dateFormat from \"dateformat\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"./Project.css\";\n\nimport FormProject from \"./FormProject\";\nimport DetailProject from \"./DetailProject\";\n\nconst Project = () => {\n  const [projects, setProjects] = useState([]);\n  const [token] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/project\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setProjects(response))\n      .then(console.log(projects))\n      .catch((error) => console.log(error));\n  }, [token]);\n\n  const [ProjectInstance, setProjectInstance] = useState(null);\n\n  const editProjectBtn = (project) => {\n    setProjectInstance(project);\n  };\n\n  const updatedProjects = (project) => {\n    const new_project = projects.map((myproject) => {\n      if (myproject.id === project.id) {\n        return project;\n      } else {\n        return myproject;\n      }\n    });\n    setProjects(new_project);\n  };\n\n  const projectNewForm = () => {\n    setProjectInstance({\n      name: \"\",\n      deadline: \"\",\n      description: \"\",\n      status: \"\",\n      client: \"\",\n    });\n  };\n\n  const createdProject = (project) => {\n    const new_project = [...projects, project];\n    setProjects(new_project);\n  };\n\n  const [ActiveProject, setActiveProject] = useState();\n  const [ProjectTodos, setProjectTodos] = useState();\n\n  const viewProjectDetail = (project) => {\n    setActiveProject(project);\n    fetch(`http://127.0.0.1:8000/api/todos?project=${project.id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setProjectTodos(response));\n  };\n\n  return (\n    <div style={{ marginTop: \"5em\" }}>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"project-header\">\n          <h1 style={{ color: \"burlywood\" }}>Your Exising Projects</h1>\n        </div>\n        <div className=\"project-header-btn d-flex\">\n          <div class=\"input-group\">\n            <select class=\"custom-select\" id=\"inputGroupSelect01\">\n              <option selected>Filter...</option>\n              <option value=\"1\">One</option>\n              <option value=\"2\">Two</option>\n              <option value=\"3\">Three</option>\n            </select>\n          </div>\n          <button\n            className=\"btn btn-primary btn-sm project-add-btn\"\n            onClick={projectNewForm}\n          >\n            &#43; Add a new project\n          </button>\n        </div>\n      </div>\n\n      <hr className=\"bg-light\" />\n      <div className=\"proj-wrapper text-white\">\n        {projects\n          ? projects.map((project) => {\n              return (\n                <div key={project.id} className=\"\">\n                  <h3>{project.name}</h3>\n                  <p>\n                    Deadline: {dateFormat(project.deadline, \"mmmm dS, yyyy\")}\n                  </p>\n                  <p>Description: {project.description}</p>\n                  <p>Status: {project.status}</p>\n                  <div className=\"project-btn-wrapper\">\n                    <button\n                      onClick={() => viewProjectDetail(project)}\n                      className=\"btn btn-primary btn-sm\"\n                    >\n                      View\n                    </button>\n                    <button\n                      onClick={() => editProjectBtn(project)}\n                      className=\"btn btn-primary btn-sm mx-3\"\n                    >\n                      Update\n                    </button>\n                  </div>\n                  <hr />\n                </div>\n              );\n            })\n          : null}\n      </div>\n      {ProjectInstance ? (\n        <FormProject\n          ProjectInstance={ProjectInstance}\n          setProjectInstance={setProjectInstance}\n          updatedProjects={updatedProjects}\n          createdProject={createdProject}\n        />\n      ) : null}\n\n      {ActiveProject ? (\n        <DetailProject\n          ActiveProject={ActiveProject}\n          setActiveProject={setActiveProject}\n          ProjectTodos={ProjectTodos}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}