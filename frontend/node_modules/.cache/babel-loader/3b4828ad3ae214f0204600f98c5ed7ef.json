{"ast":null,"code":"var _jsxFileName = \"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/FormProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport \"../Modal.css\";\nimport APIService from \"../../APIService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormProject(props) {\n  _s();\n\n  const [ProjectName, setProjectName] = useState(\"\");\n  const [ProjectDeadline, setProjectDeadline] = useState(\"\");\n  const [ProjectDescription, setProjectDescription] = useState(\"\");\n  const [ProjectStatus, setProjectStatus] = useState(\"\");\n  const [token, setToken] = useCookies([\"loginToken\"]);\n  useEffect(() => {\n    setProjectName(props.ProjectInstance.name);\n    setProjectDeadline(props.ProjectInstance.deadline);\n    setProjectDescription(props.ProjectInstance.description);\n    setProjectStatus(props.ProjectInstance.status);\n  }, [props.ProjectInstance]);\n\n  const updateProject = () => {\n    APIService.UpdateProject(props.ProjectInstance.id, {\n      name: ProjectName,\n      deadline: ProjectDeadline,\n      description: ProjectDescription,\n      status: ProjectStatus\n    }, token[\"loginToken\"]).then(response => props.updatedProjects(response));\n  };\n\n  const createProject = () => {\n    APIService.CreateProject({\n      name: ProjectName,\n      deadline: ProjectDeadline,\n      description: ProjectDescription,\n      status: ProjectStatus\n    }, token[\"loginToken\"]).then(response => props.createdProject(response));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: props.ProjectInstance ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-light modal-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.setProjectInstance(null),\n        className: \"btn btn-primary close-btn\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label\",\n        children: \"Project Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"Enter project's name...\",\n        value: ProjectName,\n        onChange: e => setProjectName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deadline\",\n        className: \"form-label\",\n        children: \"Project Deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        id: \"deadline\",\n        placeholder: \"Enter project's deadline...\",\n        value: ProjectDeadline,\n        onChange: e => setProjectDeadline(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        className: \"form-label\",\n        children: \"Project Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        rows: \"4\",\n        id: \"description\",\n        placeholder: \"Enter project's name...\",\n        value: ProjectDescription,\n        onChange: e => setProjectDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        className: \"form-label\",\n        children: \"Project Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        name: \"status\",\n        id: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"In Progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), props.ProjectInstance.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateProject,\n        className: \"btn btn-primary\",\n        children: \"Update Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProject,\n        className: \"btn btn-primary\",\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormProject, \"7ThrVqyoQF1B/3rZSdRIRVkr92s=\", false, function () {\n  return [useCookies];\n});\n\n_c = FormProject;\nexport default FormProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormProject\");","map":{"version":3,"sources":["/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/FormProject.js"],"names":["React","useState","useEffect","useCookies","APIService","FormProject","props","ProjectName","setProjectName","ProjectDeadline","setProjectDeadline","ProjectDescription","setProjectDescription","ProjectStatus","setProjectStatus","token","setToken","ProjectInstance","name","deadline","description","status","updateProject","UpdateProject","id","then","response","updatedProjects","createProject","CreateProject","createdProject","setProjectInstance","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"../Modal.css\";\n\nimport APIService from \"../../APIService\";\n\nfunction FormProject(props) {\n  const [ProjectName, setProjectName] = useState(\"\");\n  const [ProjectDeadline, setProjectDeadline] = useState(\"\");\n  const [ProjectDescription, setProjectDescription] = useState(\"\");\n  const [ProjectStatus, setProjectStatus] = useState(\"\");\n\n  const [token, setToken] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    setProjectName(props.ProjectInstance.name);\n    setProjectDeadline(props.ProjectInstance.deadline);\n    setProjectDescription(props.ProjectInstance.description);\n    setProjectStatus(props.ProjectInstance.status);\n  }, [props.ProjectInstance]);\n\n  const updateProject = () => {\n    APIService.UpdateProject(\n      props.ProjectInstance.id,\n      {\n        name: ProjectName,\n        deadline: ProjectDeadline,\n        description: ProjectDescription,\n        status: ProjectStatus,\n      },\n      token[\"loginToken\"]\n    ).then((response) => props.updatedProjects(response));\n  };\n\n  const createProject = () => {\n    APIService.CreateProject(\n      {\n        name: ProjectName,\n        deadline: ProjectDeadline,\n        description: ProjectDescription,\n        status: ProjectStatus,\n      },\n      token[\"loginToken\"]\n    ).then((response) => props.createdProject(response));\n  };\n\n  return (\n    <div className=\"overlay\">\n      {props.ProjectInstance ? (\n        <div className=\"mb-3 text-light modal-card\">\n          <button\n            onClick={() => props.setProjectInstance(null)}\n            className=\"btn btn-primary close-btn\"\n          >\n            x\n          </button>\n          <label htmlFor=\"name\" className=\"form-label\">\n            Project Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            placeholder=\"Enter project's name...\"\n            value={ProjectName}\n            onChange={(e) => setProjectName(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"deadline\" className=\"form-label\">\n            Project Deadline\n          </label>\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            id=\"deadline\"\n            placeholder=\"Enter project's deadline...\"\n            value={ProjectDeadline}\n            onChange={(e) => setProjectDeadline(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"description\" className=\"form-label\">\n            Project Description\n          </label>\n          <textarea\n            className=\"form-control\"\n            rows=\"4\"\n            id=\"description\"\n            placeholder=\"Enter project's name...\"\n            value={ProjectDescription}\n            onChange={(e) => setProjectDescription(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"status\" className=\"form-label\">\n            Project Status\n          </label>\n          <select className=\"form-select\" name=\"status\" id=\"status\">\n            <option value=\"Pending\">Pending</option>\n            <option value=\"In Progress\">In Progress</option>\n            <option value=\"Done\">Done</option>\n          </select>\n          <br />\n\n          {props.ProjectInstance.id ? (\n            <button onClick={updateProject} className=\"btn btn-primary\">\n              Update Project\n            </button>\n          ) : (\n            <button onClick={createProject} className=\"btn btn-primary\">\n              Create Project\n            </button>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FormProject;\n"]},"metadata":{},"sourceType":"module"}