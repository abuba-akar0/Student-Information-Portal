[{"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/index.js":"1","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/App.js":"2","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/Login.js":"3","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/Nav.js":"4","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/APIService.js":"5","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/pages/Home.js":"6","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/Client.js":"7","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/FormClient.js":"8","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/DetailClient.js":"9","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/Project.js":"10","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/FormProject.js":"11","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/DetailProject.js":"12"},{"size":739,"mtime":1627700125000,"results":"13","hashOfConfig":"14"},{"size":205,"mtime":1627394736000,"results":"15","hashOfConfig":"14"},{"size":4172,"mtime":1632535466917,"results":"16","hashOfConfig":"14"},{"size":3009,"mtime":1627749829000,"results":"17","hashOfConfig":"14"},{"size":2092,"mtime":1627736787000,"results":"18","hashOfConfig":"14"},{"size":1940,"mtime":1628229357848,"results":"19","hashOfConfig":"14"},{"size":4533,"mtime":1628229403526,"results":"20","hashOfConfig":"14"},{"size":3172,"mtime":1627746965000,"results":"21","hashOfConfig":"14"},{"size":2011,"mtime":1627742209000,"results":"22","hashOfConfig":"14"},{"size":4262,"mtime":1632533926121,"results":"23","hashOfConfig":"14"},{"size":3648,"mtime":1628217019972,"results":"24","hashOfConfig":"14"},{"size":2235,"mtime":1627915095000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1udiwhv",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/index.js",[],["56","57"],"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/App.js",[],"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/Login.js",["58","59"],"import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nimport APIService from \"../APIService\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useCookies([\"loginToken\"]);\n  const [logUser, setLogUser] = useCookies([\"fname\"]);\n  const [isLogin, setLogin] = useState(true);\n  let history = useHistory();\n\n  //   For Registration Only\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    if (token[\"loginToken\"]) {\n      history.push(\"/home\");\n    }\n  }, [token]);\n\n  const loginBtn = () => {\n    APIService.LoginUser({\n      username: username,\n      password: password,\n    })\n      .then((response) => {\n        setToken(\"loginToken\", response.token);\n        setLogUser(\"fname\", response.fname);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const registerBtn = () => {\n    APIService.CreateUser({\n      username: username,\n      first_name: fname,\n      last_name: lname,\n      email: email,\n      password: password,\n    })\n      .then(() => setLogin(true))\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"container\" style={{ marginTop: \"10em\" }}>\n      {isLogin ? (\n        <h1 className=\"text-white\">Login Page</h1>\n      ) : (\n        <h1 className=\"text-white\">Registration Page</h1>\n      )}\n\n      <hr className=\"bg-white\" />\n      <label htmlFor=\"username\" className=\"form-label text-light\">\n        Username\n      </label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        id=\"username\"\n        placeholder=\"Enter username...\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      {isLogin ? (\n        \"\"\n      ) : (\n        <div className=\"text-white\">\n          <br />\n          <label htmlFor=\"fname\">First Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"fname\"\n            placeholder=\"Enter first name...\"\n            value={fname}\n            onChange={(e) => setFname(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"lname\">Last Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lname\"\n            placeholder=\"Enter last name...\"\n            value={lname}\n            onChange={(e) => setLname(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            placeholder=\"Enter email...\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n      )}\n      <br />\n      <label htmlFor=\"username\" className=\"form-label text-light\">\n        Password\n      </label>\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        id=\"password\"\n        placeholder=\"Enter password...\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n      {isLogin ? (\n        <button onClick={loginBtn} className=\"btn btn-primary\">\n          Login\n        </button>\n      ) : (\n        <button onClick={registerBtn} className=\"btn btn-primary\">\n          Register\n        </button>\n      )}\n\n      <div className=\"mb-3 text-white\">\n        <br />\n        {isLogin ? (\n          <h5>\n            If you don't have an account, please\n            <button\n              className=\"btn btn-primary mx-3\"\n              onClick={() => setLogin(false)}\n            >\n              Register\n            </button>\n            here\n          </h5>\n        ) : (\n          <h5>\n            If you have an account,\n            <button\n              className=\"btn btn-primary mx-3\"\n              onClick={() => setLogin(true)}\n            >\n              Login\n            </button>\n            here\n          </h5>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/Nav.js",["60","61","62","63"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useCookies, Cookies } from \"react-cookie\";\nimport { useHistory } from \"react-router\";\n\n// Components\nimport Home from \"./pages/Home\";\nimport Client from \"./client/Client\";\n\nconst StyledMenu = styled.ul`\n  position: fixed;\n  top: 0;\n  right: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 0 1em;\n  align-items: center;\n  justify-content: center;\n  transition: all 300ms ease;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(100%)\")};\n  opacity: ${({ open }) => (open ? \"1\" : \"0\")};\n  \n  background-color: rgb(20, 26, 31);\n  z-index: 9;\n  }\n\n  li {\n      padding: 2em 0\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  font-size: 4rem;\n  transition: all 200ms linear;\n\n  &:hover {\n    color: burlywood;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 3rem;\n  }\n`;\n\nconst Menu = ({ open, toggle }) => {\n  return (\n    <Router>\n      <StyledMenu open={open}>\n        <li>\n          <StyledLink to=\"/home\" onClick={toggle}>\n            Home\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/clients\" onClick={toggle}>\n            Clients\n          </StyledLink>\n        </li>\n      </StyledMenu>\n\n      <Switch>\n        <Route path=\"/clients\">\n          <Client />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nconst StyledBurger = styled.button`\n  position: fixed;\n  top: 5%;\n  right: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    div:first-child,\n    div:nth-child(3) {\n      transform: ${({ open }) => (open ? \"\" : \"scaleX(1)\")};\n    }\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ open }) => (open ? \"white\" : \"white\")};\n    transition: all 300ms linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) =>\n        open ? \"rotate(45deg)\" : \"rotate(0) scaleX(0.5)\"};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) =>\n        open ? \"rotate(-45deg)\" : \"rotate(0) scaleX(0.7)\"};\n    }\n  }\n`;\n\nconst Burger = ({ open, toggle }) => {\n  return (\n    <StyledBurger open={open} onClick={toggle}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\n\nconst Nav = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <Burger open={open} toggle={toggle} />\n      <Menu open={open} toggle={toggle} />\n    </div>\n  );\n};\n\nexport default Nav;\n","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/APIService.js",[],"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/pages/Home.js",["64","65","66"],"import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Project from \"../project/Project\";\n\nconst Home = () => {\n  const [logUser, removeLogUser] = useCookies([\"fname\"]);\n  const [token, removeToken] = useCookies([\"loginToken\"]);\n  let history = useHistory();\n\n  const logout = () => {\n    // This is still not working. The logout button only causes the cookie value to turn into undefined.\n    // removeToken(\"loginToken\");\n    // removeLogUser(\"fname\");\n\n    // This is such an old school vanilla javascript type. Please find the React way to do this haha :)\n    document.cookie =\n      \"loginToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    document.cookie = \"fname=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n\n    history.push(\"/\");\n    history.go(\"/\");\n  };\n\n  const [greeting, setGreeting] = useState(\"\");\n\n  useEffect(() => {\n    const date = new Date();\n    const liveHour = date.getHours();\n\n    if (liveHour < 12 && liveHour > 3) {\n      setGreeting(\"Good Morning\");\n    } else if (liveHour >= 12 && liveHour <= 15) {\n      setGreeting(\"Good Afternoon\");\n    } else {\n      setGreeting(\"Good Evening\");\n    }\n  }, []);\n\n  return (\n    <div className=\"container\" style={{ padding: \"0 0 5em\" }}>\n      <div\n        className=\"header text-white d-flex align-items-center justify-content-between\"\n        style={{ marginTop: \"5em\" }}\n      >\n        <div className=\"text-wrapper\">\n          <h1>{greeting}</h1>\n          <h1 style={{ fontSize: \"7rem\", color: \"burlywood\" }}>\n            {logUser[\"fname\"]}\n          </h1>\n          <h3>What would you like to do today?</h3>\n        </div>\n        <div className=\"logout-wrapper\">\n          <button onClick={logout} className=\"btn btn-primary\">\n            Logout\n          </button>\n        </div>\n      </div>\n\n      <Project />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/Client.js",["67"],"import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"./Client.css\";\n\nimport FormClient from \"./FormClient\";\nimport APIService from \"../../APIService\";\nimport DetailClient from \"./DetailClient\";\n\nconst Client = () => {\n  const [clients, setClients] = useState([]);\n  const [token, setToken] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/client\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setClients(response))\n      .catch((error) => console.log(error));\n  }, [token]);\n\n  const [ClientInstance, setClientInstance] = useState(null);\n\n  const [ActiveClient, setActiveClient] = useState(null);\n  const [ClientProjects, setClientProjects] = useState(null);\n\n  const detailBtn = (client) => {\n    setActiveClient(client);\n    fetch(`http://127.0.0.1:8000/api/project?client=${client.id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setClientProjects(response));\n  };\n\n  const editClientBtn = (client) => {\n    setClientInstance(client);\n  };\n\n  const updatedClient = (client) => {\n    const new_client = clients.map((myclient) => {\n      if (myclient.id === client.id) {\n        return client;\n      } else {\n        return myclient;\n      }\n    });\n\n    setClients(new_client);\n  };\n\n  const clientNewForm = () => {\n    setClientInstance({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n    });\n  };\n\n  const createdClient = (client) => {\n    const new_client = [...clients, client];\n    setClients(new_client);\n  };\n\n  const deleteClientBtn = (client) => {\n    APIService.DeleteClient(client.id)\n      .then(() => {\n        const new_client = clients.filter((myclient) => {\n          if (myclient.id === client.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        setClients(new_client);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"container\" style={{ padding: \"5em 0\" }}>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"project-header\">\n          <h1 style={{ color: \"burlywood\" }}>Your Clients</h1>\n        </div>\n        <div className=\"project-header\">\n          <button className=\"btn btn-primary btn-sm\" onClick={clientNewForm}>\n            &#43; Add a new client\n          </button>\n        </div>\n      </div>\n      <hr className=\"bg-light\" />\n      <div className=\"card-wrapper d-flex flex-wrap flex-column flex-sm-row\">\n        {clients.map((client) => {\n          return (\n            <div key={client.id} className=\"card col-md-4 m-2 flex-grow-1 \">\n              <h3 className=\"card-header bg-dark border-dark text-white pt-3\">\n                {client.name}\n              </h3>\n              <div className=\"card-body bg-dark text-white\">\n                <p>Email: {client.email}</p>\n                <p>Phone: {client.phone}</p>\n\n                <div className=\"clients-btn-wrapper\">\n                  <button\n                    onClick={() => detailBtn(client)}\n                    className=\"btn btn-primary btn-sm\"\n                  >\n                    Detail\n                  </button>\n                  <button\n                    onClick={() => editClientBtn(client)}\n                    className=\"btn btn-primary btn-sm\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => deleteClientBtn(client)}\n                    className=\"btn btn-delete btn-sm\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {ClientInstance ? (\n        <FormClient\n          ClientInstance={ClientInstance}\n          setClientInstance={setClientInstance}\n          updatedClient={updatedClient}\n          createdClient={createdClient}\n        />\n      ) : null}\n\n      {ClientProjects ? (\n        <DetailClient\n          ActiveClient={ActiveClient}\n          ClientProjects={ClientProjects}\n          setClientProjects={setClientProjects}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Client;\n","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/FormClient.js",[],"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/client/DetailClient.js",[],"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/Project.js",[],"/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/FormProject.js",["68"],"import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"../Modal.css\";\n\nimport APIService from \"../../APIService\";\n\nfunction FormProject(props) {\n  const [ProjectName, setProjectName] = useState(\"\");\n  const [ProjectDeadline, setProjectDeadline] = useState(\"\");\n  const [ProjectDescription, setProjectDescription] = useState(\"\");\n  const [ProjectStatus, setProjectStatus] = useState(\"\");\n\n  const [token, setToken] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    setProjectName(props.ProjectInstance.name);\n    setProjectDeadline(props.ProjectInstance.deadline);\n    setProjectDescription(props.ProjectInstance.description);\n    setProjectStatus(props.ProjectInstance.status);\n  }, [props.ProjectInstance]);\n\n  const updateProject = () => {\n    APIService.UpdateProject(\n      props.ProjectInstance.id,\n      {\n        name: ProjectName,\n        deadline: ProjectDeadline,\n        description: ProjectDescription,\n        status: ProjectStatus,\n      },\n      token[\"loginToken\"]\n    ).then((response) => props.updatedProjects(response));\n  };\n\n  const createProject = () => {\n    APIService.CreateProject(\n      {\n        name: ProjectName,\n        deadline: ProjectDeadline,\n        description: ProjectDescription,\n        status: ProjectStatus,\n      },\n      token[\"loginToken\"]\n    ).then((response) => props.createdProject(response));\n  };\n\n  return (\n    <div className=\"overlay\">\n      {props.ProjectInstance ? (\n        <div className=\"mb-3 text-light modal-card\">\n          <button\n            onClick={() => props.setProjectInstance(null)}\n            className=\"btn btn-primary close-btn\"\n          >\n            x\n          </button>\n          <label htmlFor=\"name\" className=\"form-label\">\n            Project Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            placeholder=\"Enter project's name...\"\n            value={ProjectName}\n            onChange={(e) => setProjectName(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"deadline\" className=\"form-label\">\n            Project Deadline\n          </label>\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            id=\"deadline\"\n            placeholder=\"Enter project's deadline...\"\n            value={ProjectDeadline}\n            onChange={(e) => setProjectDeadline(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"description\" className=\"form-label\">\n            Project Description\n          </label>\n          <textarea\n            className=\"form-control\"\n            rows=\"4\"\n            id=\"description\"\n            placeholder=\"Enter project's name...\"\n            value={ProjectDescription}\n            onChange={(e) => setProjectDescription(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"status\" className=\"form-label\">\n            Project Status\n          </label>\n          <select className=\"form-select\" name=\"status\" id=\"status\">\n            <option value=\"Pending\">Pending</option>\n            <option value=\"In Progress\">In Progress</option>\n            <option value=\"Done\">Done</option>\n          </select>\n          <br />\n\n          {props.ProjectInstance.id ? (\n            <button onClick={updateProject} className=\"btn btn-primary\">\n              Update Project\n            </button>\n          ) : (\n            <button onClick={createProject} className=\"btn btn-primary\">\n              Create Project\n            </button>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FormProject;\n","/Users/owenngimli/Documents/Programming/Web Development/django-react-pms-v1/frontend/src/components/project/DetailProject.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":24,"column":6,"nodeType":"79","endLine":24,"endColumn":13,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"81","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"82","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":20},{"ruleId":"73","severity":1,"message":"83","line":4,"column":22,"nodeType":"75","messageId":"76","endLine":4,"endColumn":29},{"ruleId":"73","severity":1,"message":"84","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":20},{"ruleId":"73","severity":1,"message":"85","line":8,"column":19,"nodeType":"75","messageId":"76","endLine":8,"endColumn":32},{"ruleId":"73","severity":1,"message":"86","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":15},{"ruleId":"73","severity":1,"message":"87","line":9,"column":17,"nodeType":"75","messageId":"76","endLine":9,"endColumn":28},{"ruleId":"73","severity":1,"message":"88","line":12,"column":17,"nodeType":"75","messageId":"76","endLine":12,"endColumn":25},{"ruleId":"73","severity":1,"message":"88","line":14,"column":17,"nodeType":"75","messageId":"76","endLine":14,"endColumn":25},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'logUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'useEffect' is defined but never used.","'useCookies' is defined but never used.","'Cookies' is defined but never used.","'useHistory' is defined but never used.","'removeLogUser' is assigned a value but never used.","'token' is assigned a value but never used.","'removeToken' is assigned a value but never used.","'setToken' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [history, token]",{"range":"94","text":"95"},[737,744],"[history, token]"]